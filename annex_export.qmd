---
title: "Exporting data to other packages"
format: html
---

### Configurations to run this chapter{-}


```{r}
#| echo: true
#| eval: true
#| output: false
# load package "tibble"
library(tibble)
# load packages "sits" and "sitsdata"
library(sits)
library(sitsdata)
# required packages to demonstrate examples
library(sf)
library(stars)
library(terra)
# set tempdir if it does not exist 
tempdir_r <- "~/sitsbook/tempdir/R/annex_export"
dir.create(tempdir_r, showWarnings = FALSE)
```

## Exporting time series data to sf 

The `sf` package is the backbone of geospatial vector processing in R [@Pebesma2018]. To export time series tibbles from `sits` to `sf`, the function `sits_as_sf()` creates an `sf` POINT object with the locations of each sample and includes the `time_series` column as a list. Each row in the `sf` object contains the time series associated to the sample.

```{r}
#| eval: true
# Export a sits tibble to sf
sf_obj <- sits_as_sf(samples_modis_ndvi)
# Display the sf object
sf_obj
```

## Exporting data cubes to stars

The `stars` R package handles spatiotemporal arrays. It provides a general framework for working with raster and vector data. Data cubes in `sits` can be converted to `stars` objects using `sits_as_stars()`. By default, the stars object will be loaded in memory. This can result in heavy memory usage. To produce a `stars.proxy` object, users have to select a single date, since stars does not allow proxy objects to be created with two dimensions.

```{r}
# create a data cube from a local set of TIFF files
# this is a cube with 23 instances and one band ("NDVI")
data_dir <- system.file("extdata/raster/mod13q1", package = "sits")
cube <- sits_cube(
    source = "BDC",
    collection = "MOD13Q1-6.1",
    data_dir = data_dir
)
stars_object <- sits_as_stars(cube)
# plot the first date of the stars object
plot(stars_object[,,,,1])
```

## Exporting data cubes to terra

The `terra` package in R is a high-performance framework for spatial raster and vector data analysis. It was developed as the successor to the older raster package, offering a faster, more memory-efficient, and flexible API for working with geographic data. To export data cubes to `terra`, `sits` uses `sits_as_terra()` function which takes information about files, bands and dates in a data cube to produce an object of class  `SpatRaster` in `terra`. Because `terra` does not understand multi-tiles and multi-temporal cubes, users have to select a tile and a date from the data cube. By default, all bands are included in the terra object, but users can also select which bands to export.

```{r}
# create a data cube from a local set of TIFF files
# this is a cube with 23 instances and one band ("NDVI")
data_dir <- system.file("extdata/raster/mod13q1", package = "sits")
cube <- sits_cube(
    source = "BDC",
    collection = "MOD13Q1-6.1",
    data_dir = data_dir
)
terra_object <- sits_as_terra(cube, date = "2013-09-14")
# plot the first date of the stars object
terra_object
```